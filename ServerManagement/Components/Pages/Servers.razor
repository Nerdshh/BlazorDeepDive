@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase)?"border-primary":"")">
                    <img src="@($"/images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary" @onclick="@(() => { SelectCity(city); })">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br/>

<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent>

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Servers" @bind-value="serverFilter" @bind-value:event="oninput"/>
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>
<br />

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@* <p>
    <button class="btn btn-secondary" @onclick="@(() => { this.servers.Insert(0, new Server {Name = "ServerA", City = "Toronto"}); })">
        Add Server 2
    </button>
</p> *@


@code {
    
    private List<string> cities = CitiesRepository.GetCities();
    private string selectedCity = "Toronto";
    private string _serverFilter = "";
    private string serverFilter { get => _serverFilter; set
        {
            _serverFilter = value;
            //this.servers = ServersRepository.SearchServer(_serverFilter);
        } 
    }

    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;

        //this.servers = ServersRepository.GetServersByCity(selectedCity);
    }

    private void HandleSearch()
    {
        //this.servers = ServersRepository.SearchServer(serverFilter);

        this.selectedCity = string.Empty;
    }
}
