@page "/servers"
@page "/servers/back_from/{cityName}"

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />

<CityListComponent @ref="cityListComponent" SelectCityCallback="HandleCitySelection" selectedCity="@this.selectedCity"></CityListComponent>

<br/>

<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer" style="200px" data-my-attribute="my data"></SearchBarComponent>

<br/>

<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity" SearchFilter="@searchFilter"></ServerListComponent>
</CascadingValue>


<p>
    <a href="/server" class="btn btn-primary">Add Server</a>
</p>


@code {

    [Parameter]
    public string? CityName { get; set; }

    private string selectedCity = "Toronto";
    private string searchFilter = "";
    private CityListComponent? cityListComponent;
    private SearchBarComponent? searchBarComponent;

    private void HandleSearch()
    {
        //this.servers = ServersRepository.SearchServers(serverFilter);

        //this.selectedCity = string.Empty;
    }

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        this.searchFilter = string.Empty;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        this.searchFilter = searchFilter;

        cityListComponent?.ClearSelection();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (NavigationManager.Uri.Contains("back_from"))
            {
                selectedCity = CityName;

                StateHasChanged();
            }
        }
    }
}
